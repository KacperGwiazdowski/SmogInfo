// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SmogInfo.Entities;
using System;

namespace SmogInfo.Migrations
{
    [DbContext(typeof(SmogInfoContext))]
    partial class SmogInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmogInfo.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("SmogInfo.Entities.SmogLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<decimal>("PM10Concentration");

                    b.Property<int>("StationPointId");

                    b.HasKey("Id");

                    b.HasIndex("StationPointId");

                    b.ToTable("SmogLevels");
                });

            modelBuilder.Entity("SmogInfo.Entities.StationPoint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CityId");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CityId");

                    b.ToTable("StationPoints");
                });

            modelBuilder.Entity("SmogInfo.Entities.SmogLevel", b =>
                {
                    b.HasOne("SmogInfo.Entities.StationPoint", "StationPoint")
                        .WithMany("SmogLevels")
                        .HasForeignKey("StationPointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmogInfo.Entities.StationPoint", b =>
                {
                    b.HasOne("SmogInfo.Entities.City", "City")
                        .WithMany("StationPoints")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
